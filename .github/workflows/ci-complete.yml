name: Complete CI

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  backend:
    name: Backend Tests
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up JDK 21
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'temurin'
        cache: maven
    
    - name: Run backend tests
      run: mvn clean test
    
    - name: Build backend
      run: mvn package -DskipTests
    
    - name: Upload backend artifact
      uses: actions/upload-artifact@v4
      with:
        name: backend-jar
        path: target/*.jar

  frontend:
    name: Frontend Tests
    runs-on: ubuntu-latest
    
    defaults:
      run:
        working-directory: ./frontend
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
        cache-dependency-path: frontend/package-lock.json
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run frontend tests
      run: npm test -- --coverage --watchAll=false
    
    - name: Build frontend
      run: npm run build
    
    - name: Upload frontend artifact
      uses: actions/upload-artifact@v4
      with:
        name: frontend-build
        path: frontend/build/

  docker:
    name: Docker Build
    runs-on: ubuntu-latest
    needs: [backend, frontend]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Download backend artifact
      uses: actions/download-artifact@v4
      with:
        name: backend-jar
        path: target/
    
    - name: Download frontend artifact
      uses: actions/download-artifact@v4
      with:
        name: frontend-build
        path: frontend/build/
    
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
    
    - name: Build and test Docker images
      run: |
        docker-compose build
        docker-compose up -d
        sleep 15
        docker-compose ps
        
        # Sprawdź czy backend odpowiada
        curl -f http://localhost:8080/actuator/health || exit 1
        
        # Sprawdź czy frontend odpowiada
        curl -f http://localhost:3000 || exit 1
        
        docker-compose down
    
    - name: Run integration tests
      if: hashFiles('integration-tests/**') != ''
      run: |
        docker-compose -f docker-compose.test.yml up --abort-on-container-exit
        docker-compose -f docker-compose.test.yml down

  quality:
    name: Code Quality
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0
    
    - name: Set up JDK 21
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: 'temurin'
        cache: maven
    
    - name: Run code quality checks
      run: |
        mvn checkstyle:check || true
        mvn pmd:check || true
    
    - name: Upload quality reports
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: quality-reports
        path: |
          target/checkstyle-result.xml
          target/pmd.xml